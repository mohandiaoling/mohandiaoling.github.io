[
{
	"uri": "https://mohandiaoling.github.io/%E5%8D%9A%E5%AE%A2/",
	"title": "博客",
	"tags": [],
	"description": "",
	"content": "内容有待编辑\n"
},
{
	"uri": "https://mohandiaoling.github.io/%E7%BD%91%E7%9B%98%E6%94%BB%E9%98%B2/",
	"title": "网盘攻防",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://mohandiaoling.github.io/%E7%94%B5%E8%B5%9B/",
	"title": "电赛",
	"tags": [],
	"description": "",
	"content": "Chapter X Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "https://mohandiaoling.github.io/",
	"title": "Hugo 主题的 Learn 文档",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://mohandiaoling.github.io/%E7%BD%91%E7%9B%98%E6%94%BB%E9%98%B2/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E9%93%BE%E6%8E%A5/",
	"title": "常见问题解决链接",
	"tags": [],
	"description": "",
	"content": " Java教程 IDEA新手使用教程（详解） Java项目开发实战入门 Jetbrains系列产品重置试用方法归档 java.net.BindException: Address already in use: bind 解决端口号被占用 tomcat启动失败：初始化组件[Connector[HTTP/1.1-8080]]失败 解决tomcat正常启动但是对应的网页却无法访问 Tomcat安装及配置 JavaWeb入门登录注册系统 windows无法终止PID的进程，拒绝访问 MySQL 下载安装教程 官网下载mysql的jar包及导入到java项目中 MySQL的详细安装教程 MySQL 教程  MySQL数据库教程视频 JavaWeb教程目录 尚硅谷 2022 最新 IntelliJ IDEA 详细配置步骤演示 IDEA破解教程 IDEA MyEclipse Eclipse 快捷键大全(最终版) Tomcat启动闪退的原因和解决方法 javaweb项目的文件结构 idea中request获取不到getParameter方法 如何查看自己电脑主机的IP地址 IDEA Java web项目搭建以及连接Mysql数据库 通过IntelliJ IDEA软件实现Java项目连接MySQL的详细过程 解决Loading class com.mysql.jdbc.Driver‘. This is deprecated. The new driver class is com.mysql.cj.j 菜鸟教程 Servlet-实现用户的注册功能 Mysql数据库中有哪些数据类型? IntelliJ IDEA 2022.1永久破解激活教程（最新版，亲测可用） CSS参考手册 Java中带返回值方法定义和调用  "
},
{
	"uri": "https://mohandiaoling.github.io/%E7%94%B5%E8%B5%9B/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E9%93%BE%E6%8E%A5/",
	"title": "常见问题解决链接",
	"tags": [],
	"description": "",
	"content": " 立创元器件封装库导入AD的详细教程 立创元器件封装库导入AD AD19\u0026mdash;彻底解决原理图转PCB时，出现failed to add class member及Unknown Pin的问题 AD19导出Gerber文件-嘉立创打板  "
},
{
	"uri": "https://mohandiaoling.github.io/%E5%8D%9A%E5%AE%A2/%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8/",
	"title": "博客使用",
	"tags": [],
	"description": "",
	"content": "  博客内容创建\n  部署到github\n  文本内容编辑\n  博客内容创建  创建一个博客网站：hugo new site myblog（站点名，可自定义） 创建章节：hugo new --kind chapter \u0026lt;name\u0026gt;/_index.md 创建章节下页面：hugo new \u0026lt;name\u0026gt;/name.md 若要该页面显示，需删除draft: true 启动站点服务：hugo server   部署到github  在博客目录下打开cmd，输入hugo --theme=hugo-theme-learn --baseUrl=\u0026quot;https://mohandiaoling.github.io\u0026quot; --buildDrafts\n会在博客根目录 myblog 生成 public 文件夹，里面就是编译好的静态页面文件。 在public目录下：运行git bash，执行 git init将public文件夹变成 git 本地仓库 执行git add .将文件夹所以文件放入暂存区 执行 git commit -m \u0026quot;提交文件\u0026quot; 提交暂存区到本地仓库中 执行git remote add origin https://github.com/mohandiaoling/mohandiaoling.github.io.git添加远程版本库 然后执行git pull 执行git push -u origin master -f将本地仓库代码推送到远程库 执行git push -u origin master,直到出现Everything up-to-date。 最后，在浏览器中访问 https://mohandiaoling.github.io/ ，即可看到自己的博客网站。   文本内容编辑  标题：按#，从一到六，标题从大到小，一个#号时，标题位于中间。并且#与后面文档有一个空格。例如:  # h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading 效果为：\nh1 Heading h4 Heading h5 Heading h6 Heading  注释：\u0026lt;!-- 注释内容 --\u0026gt;与html相同 主题分隔：（1）三个连续的下划线 （2）三个连续的破折号 （3）三个连续的星号。这三个显示是一样的。例如：___,***.---.\n效果为：    代码突出显示：在代码俩边分别加上```（英文下）。 页面换行：在一行后面加俩个空格，再按回车 粗体文本：在文本俩侧各加上俩个**，例如：**rendered as bold text**\n效果为：rendered as bold text 斜体文本：在文本俩侧各加上一个下划线，例如：**rendered as bold text**\n效果为：rendered as italicized text 删除线：文本俩侧各加上俩个波浪线,例如：~~Strike through this text.~~\n效果为：Strike through this text. 引用文档中其他来源的内容块：在要引用的任何文本之前添加\u0026gt;。注意\u0026gt;需要放在一行的最前面。例如：  \u0026gt; **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 效果为：\n Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\n也可用于嵌套：例如\n \u0026gt; **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 效果为：\n Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\n Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\n Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus.\n  无序列表：在文本前加上*,-或者+。例如：  * valid bullet - valid bullet + valid bullet 效果为：\n valid bullet   valid bullet   valid bullet 还可以嵌套使用，例如：  + Facilisis in pretium nisl aliquet + Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at 效果为：\n Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit  Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at   有序列表：在其前加上数字，是否加上空格会有不同效果，例如：  1. Lorem ipsum dolor sit amet 4.Consectetur adipiscing elit 2.Integer molestie lorem at massa 8. Facilisis in pretium nisl aliquet 4.Nulla volutpat aliquam velit 99.Faucibus porta lacus fringilla vel 21.Aenean sit amet erat nunc 6. Eget porttitor lorem 效果为：\n Lorem ipsum dolor sit amet 4.Consectetur adipiscing elit 2.Integer molestie lorem at massa Facilisis in pretium nisl aliquet 4.Nulla volutpat aliquam velit 99.Faucibus porta lacus fringilla vel 21.Aenean sit amet erat nunc Eget porttitor lorem  只有加上空格才会有序排列，就算文本前面数字混乱，也会按照从上到下依次排序。\n 表格：通过将管道添加为每个单元格之间的分隔线，并在标题下添加一行短划线（也由条形分隔）来创建表。请注意，管道不需要垂直对齐。例如：  | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 效果为：\n   Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.     表格右对齐：在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐。例如：  | Option | Description | | ------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 效果为：\n   Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.     链接：将鼠标悬停在链接上，没有工具提示。例如：[Assemble](http://assemble.io) 效果为：Assemble 添加工具提示：将鼠标悬停在链接上，应该有一个工具提示。与链接格式不同的是，后面“”里面有工具提示内容。例如：  [Upstage](https://github.com/upstage/ \u0026#34;Visit Upstage!\u0026#34;) 效果为：Upstage\n 图像：图像具有与链接类似的语法，但包含前面的感叹号。例如： ![Minion](https://octodex.github.com/images/minion.png)\n效果为： 图像的替代用法：例如：![Alt text][id]然后在文档后面加上[id]: https://octodex.github.com/images/dojocat.jpg \u0026quot;The Dojocat\u0026quot; 调整图片大小：将 HTTP 参数和/或添加到链接图像以调整图像大小。值是 CSS 值（默认值为 ）。例如：![Minion](https://octodex.github.com/images/minion.png?height=50px\u0026amp;width=300px) 效果为： 命名锚点：能够跳转到同一页面上的指定锚点。例如：```# Table of Contents  Chapter 1 Chapter 2 Chapter 3  效果为：# Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) ()里面中#后面的就是标题的名称  "
},
{
	"uri": "https://mohandiaoling.github.io/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://mohandiaoling.github.io/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]